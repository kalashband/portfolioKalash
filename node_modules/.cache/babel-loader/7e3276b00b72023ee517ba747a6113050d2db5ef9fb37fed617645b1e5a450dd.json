{"ast":null,"code":"import React,{createContext,useEffect}from'react';import{theme}from'../Utils/themes';// import { currentTime } from '../Utils/Time';\n// const getTheme = () => {\n// \tconst time = currentTime();\n// \tlet mode = '';\n// \tif (time > 18 && time < 6.01) {\n// \t\tmode = 'light';\n// \t} else {\n// \t\tmode = 'dark';\n// \t}\n// \treturn mode;\n// };\nimport{jsx as _jsx}from\"react/jsx-runtime\";const getMode=JSON.parse(localStorage.getItem('theme'))||'dark';export const ThemeContext=/*#__PURE__*/createContext();const ThemeContextProvider=_ref=>{let{children}=_ref;const[mode,setMode]=React.useState(getMode);const[open,setOpen]=React.useState(true);const handleMode=()=>{setMode(mode==='dark'?'light':'dark');};useEffect(()=>{localStorage.setItem('theme',JSON.stringify(mode));},[mode]);const handleMenu=()=>{setOpen(!open);};const newTheme=theme[mode];const value={mode,newTheme,handleMode,open,handleMenu};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};export{ThemeContextProvider};","map":{"version":3,"names":["React","createContext","useEffect","theme","jsx","_jsx","getMode","JSON","parse","localStorage","getItem","ThemeContext","ThemeContextProvider","_ref","children","mode","setMode","useState","open","setOpen","handleMode","setItem","stringify","handleMenu","newTheme","value","Provider"],"sources":["C:/Users/kalas/React/React_practice/portfolio_kalash/src/ContextProvider/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useEffect } from 'react';\nimport { theme } from '../Utils/themes';\n// import { currentTime } from '../Utils/Time';\n\n// const getTheme = () => {\n// \tconst time = currentTime();\n// \tlet mode = '';\n// \tif (time > 18 && time < 6.01) {\n// \t\tmode = 'light';\n// \t} else {\n// \t\tmode = 'dark';\n// \t}\n// \treturn mode;\n// };\nconst getMode = JSON.parse(localStorage.getItem('theme')) || 'dark';\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = ({ children }) => {\n\tconst [mode, setMode] = React.useState(getMode);\n\tconst [open, setOpen] = React.useState(true);\n\n\tconst handleMode = () => {\n\t\tsetMode(mode === 'dark' ? 'light' : 'dark');\n\t};\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('theme', JSON.stringify(mode));\n\t}, [mode]);\n\tconst handleMenu = () => {\n\t\tsetOpen(!open);\n\t};\n\n\tconst newTheme = theme[mode];\n\n\tconst value = { mode, newTheme, handleMode, open, handleMenu };\n\treturn (\n\t\t<ThemeContext.Provider value={value}>\n\t\t\t{children}\n\t\t</ThemeContext.Provider>\n\t);\n};\n\nexport { ThemeContextProvider };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,SAAS,KAAQ,OAAO,CACvD,OAASC,KAAK,KAAQ,iBAAiB,CACvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAI,MAAM,CACnE,MAAO,MAAM,CAAAC,YAAY,cAAGV,aAAa,CAAC,CAAC,CAE3C,KAAM,CAAAW,oBAAoB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGhB,KAAK,CAACiB,QAAQ,CAACX,OAAO,CAAC,CAC/C,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGnB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAG,UAAU,CAAGA,CAAA,GAAM,CACxBJ,OAAO,CAACD,IAAI,GAAK,MAAM,CAAG,OAAO,CAAG,MAAM,CAAC,CAC5C,CAAC,CAEDb,SAAS,CAAC,IAAM,CACfO,YAAY,CAACY,OAAO,CAAC,OAAO,CAAEd,IAAI,CAACe,SAAS,CAACP,IAAI,CAAC,CAAC,CACpD,CAAC,CAAE,CAACA,IAAI,CAAC,CAAC,CACV,KAAM,CAAAQ,UAAU,CAAGA,CAAA,GAAM,CACxBJ,OAAO,CAAC,CAACD,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAM,QAAQ,CAAGrB,KAAK,CAACY,IAAI,CAAC,CAE5B,KAAM,CAAAU,KAAK,CAAG,CAAEV,IAAI,CAAES,QAAQ,CAAEJ,UAAU,CAAEF,IAAI,CAAEK,UAAW,CAAC,CAC9D,mBACClB,IAAA,CAACM,YAAY,CAACe,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAX,QAAA,CAClCA,QAAQ,CACa,CAAC,CAE1B,CAAC,CAED,OAASF,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}